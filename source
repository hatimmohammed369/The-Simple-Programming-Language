# this is a single line comment

# un-initialized, x is null
const string x;

# semi-colon is optional
write(x)

x = 'Hello' + " " + 'world!';
write("{} is a string, {} is also a number" % x 123456)
write("{} is a string, {} is also a number", x, 123456)

const int n := 1234;
n = 12;# const re-assignment illegal

float r;
read("float {}" % r);
write(r);

read("floating-point {}", r);
write("input " + string(r));

function recursive_fib(int n) returns int => {
  branch n
    if n == 0 or n == 1 do
      return 1
  end "branch n"
  return recursive_fib(n-2) + recursive_fib(n-1)
}

function for_fib(int n) returns int => {
  int a, b := 0, 1;
  foreach j in range(1, n) do
    a, b = b, a+b
  end "for"
  return a
}

function while_fib(int n) returns int => {
  int a, b := 0, 1;
  int j;
  j = 0;
  while j < n is true
    a, b = b, a+b
  ene "while j < n"
  return a
}

int j := 0;
while true
  match n:
    case 5:
      continue "while true"
    case 10:
      break "while true"
    else:
      write("fib({}) = {}" % j fib(j))
  end "branch n"
end "while true"
