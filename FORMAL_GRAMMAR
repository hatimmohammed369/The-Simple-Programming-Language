# *      =>  0 or more
# +      =>  1 or more
# [xyz]  =>  xyz is optional
# () are used for grouping
# anything between '' is denotes just itself, so '(' denotes an actual ( written in code

KEYWORDS: 'var' | 'const' | 'int' | 'real' | 'string' | 'bool' | 'not' | 'and' | 'or' | 'true' | 'false' | 'array' | 'ref_of' |
    'fn' | 'return' | 'if' | 'else' | 'else_if' | 'for' | 'while' | 'break' | 'continue' | 'pass'

MODULE: STATEMENT*

STATEMENT: ( SMALL_STATEMENT | BLOCK_STATEMENT ) [ [';'] LINE_BREAK | ';' ]

SMALL_STATEMENT: 'pass' | 'break' | 'continue' | RETURN_STATEMENT | OPERATOR_STATEMENT

RETURN_STATEMENT: 'return' EXPRESSION

EXPRESSION: NAME | LITERAL | FUNCTION_CALL | CONST_VAR_DECLARATION | ARRAY_SUBSCRIPTION

ARRAY_SUBSCRIPTION: NAME '[' NON_NEGATIVE_INTEGER ']'

LITERAL: NUMBER | STRING

FUNCTION_CALL: NAME '(' EXPRESSIONS_LIST ')'

EXPRESSIONS_LIST: EXPRESSION ( ',' EXPRESSION )*

OPERATOR_STATEMENT: EXPRESSION OPERATOR EXPRESSION

OPERATOR: LOGICAL_OPERATOR | ARITHMETIC_OPERATOR | ASSIGNMENT_OPERATOR 

LOGICAL_OPERATOR: '==' | '!=' | '<' | '<=' | '>' | '>=' | 'not' | 'and' | 'or'

ARITHMETIC_OPERATOR: '+' | '-' | '*' | '/' | '++' | '--'

ASSIGNMENT_OPERATOR: ':=' | '=' | '+=' | '-=' | '*=' | '/=' | '~=' | '&=' | '|=' | '^=' | '>>=' | '<<='

CONST_VAR_DECLARATION: ( 'const' | 'var' ) NAMES_LIST: '(' TYPES_LIST ')' = EXPRESSIONS_LIST

NAMES_LIST: NAME ( ',' NAME )*

TYPES_LIST: TYPE ( ',' TYPE )*

TYPE: [ 'const' | 'var' ] USER_DEFINED_TYPE | PRIMITIVE_DATA_TYPE [ '&' ]

PRIMITIVE_DATA_TYPE: 'int' | 'real' | 'string' | 'bool' | ARRAY_TYPE

ARRAY_TYPE: 'array' [ '[' NON_NEGATIVE_INTEGER ':' TYPE ']' ]

BLOCK_STATEMENT: FUNCTION_STATEMENT | IF_STATEMENT | FOR_STATEMENT | WHILE_STATEMENT

FUNCTION_STATEMENT: 'fn' NAME '(' PARAMETERS_LIST ')' [ ':' TYPE ] BLOCK END_STATEMENT

PARAMETERS_LIST: PARAMETER ( ',' PARAMETER )*

PARAMETER: ( 'const' | 'var' ) NAME ':' TYPE

BLOCK: INDENT STATEMENT+ OUTDENT

END_STATEMENT: 'end' STRING

IF_STATEMENT: 'if' EXPRESSION BLOCK [ 'else_if' BLOCK ] [ 'else' BLOCK ] END_STATEMENT

FOR_STATEMENT: 'for' NAME 'in' ARRAY_EXPRESSION BLOCK END_STATEMENT

WHILE_STATEMENT: 'while' EXPRESSION BLOCK END_STATEMENT
